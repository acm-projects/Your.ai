{
    "url": "https://developers.google.com/calendar/v3/reference/calendars/update",
    "content": "Home\nGoogle Workspace\nGoogle Calendar\nReference\nSend feedback\nCalendars: update\nStay organized with collections\nSave and categorize content based on your preferences.\nNote:\nRequires\nauthorization\n.\nUpdates metadata for a calendar.\nTry it now\nor\nsee an example\n.\nRequest\nHTTP request\nPUT https://www.googleapis.com/calendar/v3/calendars/\ncalendarId\nParameters\nParameter name\nValue\nDescription\nPath parameters\ncalendarId\nstring\nCalendar identifier. To retrieve calendar IDs call the\ncalendarList.list\nmethod. If you want to access the primary calendar of the currently logged in user, use the \"\nprimary\n\" keyword.\nAuthorization\nThis request requires authorization with at least one of the following scopes:\nScope\nhttps://www.googleapis.com/auth/calendar\nhttps://www.googleapis.com/auth/calendar.app.created\nhttps://www.googleapis.com/auth/calendar.calendars\nFor more information, see the\nauthentication and authorization\npage.\nRequest body\nIn the request body, supply a\nCalendars resource\nwith the following properties:\nProperty name\nValue\nDescription\nNotes\nOptional Properties\ndescription\nstring\nDescription of the calendar. Optional.\nwritable\nlocation\nstring\nGeographic location of the calendar as free-form text. Optional.\nwritable\nsummary\nstring\nTitle of the calendar.\nwritable\ntimeZone\nstring\nThe time zone of the calendar. (Formatted as an IANA Time Zone Database name, e.g. \"Europe/Zurich\".) Optional.\nwritable\nResponse\nIf successful, this method returns a\nCalendars resource\nin the response body.\nExamples\nNote:\nThe code examples available for this method do not represent all supported programming languages (see the\nclient libraries page\nfor a list of supported languages).\nJava\nUses the\nJava client library\n.\nimport\ncom.google.api.services.calendar.Calendar\n;\n// ...\n// Initialize Calendar service with valid OAuth credentials\nCalendar\nservice\n=\nnew\nCalendar\n.\nBuilder\n(\nhttpTransport\n,\njsonFactory\n,\ncredentials\n)\n.\nsetApplicationName\n(\n\"applicationName\"\n).\nbuild\n();\n// Retrieve a calendar\ncom\n.\ngoogle\n.\napi\n.\nservices\n.\ncalendar\n.\nmodel\n.\nCalendar\ncalendar\n=\nservice\n.\ncalendars\n().\nget\n(\n'\nprimary\n'\n).\nexecute\n();\n// Make a change\ncalendar\n.\nsetSummary\n(\n\"calendarSummary\"\n);\n// Update the altered calendar\ncom\n.\ngoogle\n.\napi\n.\nservices\n.\ncalendar\n.\nmodel\n.\nCalendar\nupdatedCalendar\n=\nservice\n.\ncalendars\n().\nupdate\n(\ncalendar\n.\ngetId\n(),\ncalendar\n).\nexecute\n();\nSystem\n.\nout\n.\nprintln\n(\nupdatedCalendar\n.\ngetEtag\n());\nPython\nUses the\nPython client library\n.\n# First retrieve the calendar from the API.\ncalendar\n=\nservice\n.\ncalendars\n()\n.\nget\n(\ncalendarId\n=\n'primary'\n)\n.\nexecute\n()\ncalendar\n[\n'summary'\n]\n=\n'New Summary'\nupdated_calendar\n=\nservice\n.\ncalendars\n()\n.\nupdate\n(\ncalendarId\n=\ncalendar\n[\n'id'\n],\nbody\n=\ncalendar\n)\n.\nexecute\n()\nprint\nupdated_calendar\n[\n'etag'\n]\nPHP\nUses the\nPHP client library\n.\n// First retrieve the calendar from the API.\n$calendar = $service->calendars->get('primary');\n$calendar->setSummary('New Summary');\n$updatedCalendar = $service->calendars->update('primary', $calendar);\necho $updatedCalendar->getEtag();\nRuby\nUses the\nRuby client library\n.\ncalendar\n=\nclient\n.\nget_calendar\n(\n'primary'\n)\ncalendar\n.\nsummary\n=\n\"New Summary\"\nresult\n=\nclient\n.\nupdate_calendar\n(\ncalendar\n.\nid\n,\ncalendar\n)\nprint\nresult\n.\netag\nTry it!\nUse the APIs Explorer below to call this method on live data and see the response.\nSend feedback"
}
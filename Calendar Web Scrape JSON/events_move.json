{
    "url": "https://developers.google.com/calendar/v3/reference/events/move",
    "content": "Home\nGoogle Workspace\nGoogle Calendar\nReference\nSend feedback\nEvents: move\nStay organized with collections\nSave and categorize content based on your preferences.\nNote:\nRequires\nauthorization\n.\nMoves an event to another calendar, i.e. changes an event's organizer. Note that only\ndefault\nevents can be moved;\nbirthday\n,\nfocusTime\n,\nfromGmail\n,\noutOfOffice\nand\nworkingLocation\nevents cannot be moved.\nTry it now\nor\nsee an example\n.\nRequest\nHTTP request\nPOST https://www.googleapis.com/calendar/v3/calendars/\ncalendarId\n/events/\neventId\n/move\nParameters\nParameter name\nValue\nDescription\nPath parameters\ncalendarId\nstring\nCalendar identifier of the source calendar where the event currently is on.\neventId\nstring\nEvent identifier.\nRequired query parameters\ndestination\nstring\nCalendar identifier of the target calendar where the event is to be moved to.\nOptional query parameters\nsendNotifications\nboolean\nDeprecated. Please use\nsendUpdates\ninstead.\nWhether to send notifications about the change of the event's organizer. Note that some emails might still be sent even if you set the value to\nfalse\n. The default is\nfalse\n.\nsendUpdates\nstring\nGuests who should receive notifications about the change of the event's organizer.\nAcceptable values are:\n\"\nall\n\": Notifications are sent to all guests.\n\"\nexternalOnly\n\": Notifications are sent to non-Google Calendar guests only.\n\"\nnone\n\": No notifications are sent. For calendar migration tasks, consider using the\nEvents.import\nmethod instead.\nAuthorization\nThis request requires authorization with at least one of the following scopes:\nScope\nhttps://www.googleapis.com/auth/calendar\nhttps://www.googleapis.com/auth/calendar.events\nhttps://www.googleapis.com/auth/calendar.events.owned\nFor more information, see the\nauthentication and authorization\npage.\nRequest body\nDo not supply a request body with this method.\nResponse\nIf successful, this method returns an\nEvents resource\nin the response body.\nExamples\nNote:\nThe code examples available for this method do not represent all supported programming languages (see the\nclient libraries page\nfor a list of supported languages).\nJava\nUses the\nJava client library\n.\nimport\ncom.google.api.services.calendar.Calendar\n;\nimport\ncom.google.api.services.calendar.model.Event\n;\n// ...\n// Initialize Calendar service with valid OAuth credentials\nCalendar\nservice\n=\nnew\nCalendar\n.\nBuilder\n(\nhttpTransport\n,\njsonFactory\n,\ncredentials\n)\n.\nsetApplicationName\n(\n\"applicationName\"\n).\nbuild\n();\n// Move an event to another calendar\nEvent\nupdatedEvent\n=\nservice\n.\nevents\n().\nmove\n(\n'\nprimary\n'\n,\n\"eventId\"\n,\n\"destinationCalendarId\"\n).\nexecute\n();\nSystem\n.\nout\n.\nprintln\n(\nupdatedEvent\n.\ngetUpdated\n());\nPython\nUses the\nPython client library\n.\n# First retrieve the event from the API.\nupdated_event\n=\nservice\n.\nevents\n()\n.\nmove\n(\ncalendarId\n=\n'primary'\n,\neventId\n=\n'eventId'\n,\ndestination\n=\n'destinationCalendarId'\n)\n.\nexecute\n()\n# Print the updated date.\nprint\nupdated_event\n[\n'updated'\n]\nPHP\nUses the\nPHP client library\n.\n$result = $service->events->move('primary', 'eventId', 'destinationCalendarId');\n// Print the updated date.\necho $result->getUpdated();\nRuby\nUses the\nRuby client library\n.\nresult\n=\nclient\n.\nmove_event\n(\n'primary'\n,\n'eventId'\n,\n'destinationCalendarId'\n)\nprint\nresult\n.\nupdated\nTry it!\nUse the APIs Explorer below to call this method on live data and see the response.\nSend feedback"
}